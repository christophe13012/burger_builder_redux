{"version":3,"sources":["assets/images/burger-logo.png","Components/Navigation.js","Containers/Ingredients/Ingredients.js","Containers/Burger/Burger.js","Containers/Board.js","Store/actions.js","Store/actions_constants.js","Components/Order.js","Components/ModalComponent.js","Containers/BurgerBuilder.js","Components/OrderItem.js","Containers/Checkout.js","Components/Input.js","Containers/Login.js","Containers/Register.js","Containers/Account.js","Containers/Deconnection.js","App.js","serviceWorker.js","Store/reducers.js","index.js"],"names":["module","exports","Navigation","props","token","localStorage","getItem","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","Link","to","style","height","width","marginRight","src","logo","alt","Toggle","aria-controls","Collapse","id","Nav","className","Fragment","Ingredients","type","connect","state","ingredients","key","i","push","marginTop","length","map","igd","index","styles","container","padding","backgroundColor","color","ingredientsPrices","dispatch","addIngredient","payload","supIngredient","fontSize","Object","keys","ingredient","onClick","disabled","click","Order","burgerPrice","quantity","marginBottom","Modal","show","onHide","close","Header","closeButton","Title","Body","Footer","Button","valid","BurgerBuilder","handleCloseModal","setState","handleShowModal","handleValid","AddOrder","history","this","Component","OrderItem","order","showDelete","onDeleteOrder","Checkout","handleOrder","a","removeItem","ordersOjb","user","userInfos","email","orders","axios","post","toast","success","setTimeout","window","location","replace","handleConnect","setItem","JSON","stringify","handleRedirect","eraseBurger","handleDeleteOrder","deleteOrder","totalPrice","textAlign","undefined","Input","value","placeholder","onChange","error","label","htmlFor","role","schema","Joi","object","string","minDomainAtoms","required","password","regex","Login","loginInfos","handleChange","e","target","handleSubmit","preventDefault","result","validate","response","data","idToken","traduireMessage","details","message","arr","split","indexOf","console","log","verifPassword","Register","errors","authData","returnSecureToken","Account","get","arrOrders","Deconnection","useEffect","clear","App","objToken","saveUserInfos","users","populateIngredients","parse","populateOrders","position","path","component","exact","from","React","Boolean","hostname","match","initialState","Salade","Bacon","Viande","Fromage","store","createStore","action","splice","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c54fdaa4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React from \"react\";\r\nimport logo from \"../assets/images/burger-logo.png\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst Navigation = props => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand as={Link} to=\"/burger_builder\">\r\n        <img\r\n          style={{ height: 30, width: 30, marginRight: 10 }}\r\n          src={logo}\r\n          alt=\"logo\"\r\n        />\r\n        Burger Builder\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavLink className=\"nav-link\" to=\"/burger_builder\">\r\n            Build your burger\r\n          </NavLink>\r\n          <NavLink className=\"nav-link\" to=\"/checkout\">\r\n            Checkout\r\n          </NavLink>\r\n          {token === null ? (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-link\" to=\"/register\">\r\n                S'inscrire\r\n              </NavLink>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-link\" to=\"/compte\">\r\n                Mon compte\r\n              </NavLink>\r\n              <NavLink className=\"nav-link\" to=\"/deconnection\">\r\n                Se déconnecter\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./Ingredients.css\";\r\n\r\nconst Ingredients = ({ type }) => {\r\n  switch (type) {\r\n    case \"BreadTop\":\r\n      return (\r\n        <div className=\"BreadTop\">\r\n          <div className=\"Seeds1\"></div>\r\n          <div className=\"Seeds2\"></div>\r\n        </div>\r\n      );\r\n    case \"BreadBottom\":\r\n      return <div className=\"BreadBottom\"></div>;\r\n    case \"Salade\":\r\n      return <div className=\"Salad\"></div>;\r\n    case \"Viande\":\r\n      return <div className=\"Meat\"></div>;\r\n    case \"Fromage\":\r\n      return <div className=\"Cheese\"></div>;\r\n    case \"Bacon\":\r\n      return <div className=\"Bacon\"></div>;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default Ingredients;\r\n","import React from \"react\";\r\nimport Ingredients from \"../Ingredients/Ingredients\";\r\nimport \"./Burger.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Burger = props => {\r\n  let ingredients = [];\r\n  for (let key in props.ingredients) {\r\n    for (let i = 0; i < props.ingredients[key]; i++) {\r\n      ingredients.push(key);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"Burger\" style={{ marginTop: 35 }}>\r\n      <Ingredients type=\"BreadTop\" />\r\n      {ingredients.length === 0 ? (\r\n        <p>Selectionnez au moins un ingredient</p>\r\n      ) : (\r\n        ingredients.map((igd, index) => {\r\n          return <Ingredients key={igd + index} type={igd} />;\r\n        })\r\n      )}\r\n      <Ingredients type=\"BreadBottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.ingredients\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Burger);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addIngredient, supIngredient } from \"./../Store/actions\";\r\n\r\nconst Board = props => {\r\n  let ingredients = [];\r\n  for (let key in props.ingredients) {\r\n    for (let i = 0; i < props.ingredients[key]; i++) {\r\n      ingredients.push(key);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container rounded\" style={styles.container}>\r\n      <h1 className=\"display-4 mt-3 mb-4\" style={{ fontSize: 28 }}>\r\n        Composez votre burger\r\n      </h1>\r\n      {Object.keys(props.ingredients).map(ingredient => {\r\n        return (\r\n          <div key={ingredient} className=\"row  justify-content-center mb-2\">\r\n            <div className=\"col-6\">\r\n              <p className=\"float-right\">\r\n                {\" \"}\r\n                {ingredient}{\" \"}\r\n                <span className=\"badge badge-secondary ml-3\">\r\n                  {props.ingredientsPrices[ingredient]} €\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <p className=\"float-left\">\r\n                <button\r\n                  onClick={() => props.addIngredient(ingredient)}\r\n                  className=\"btn btn-sm btn-success\"\r\n                >\r\n                  Ajouter\r\n                </button>\r\n                <button\r\n                  disabled={props.ingredients[ingredient] < 1 ? true : false}\r\n                  onClick={() => props.supIngredient(ingredient)}\r\n                  className=\"btn btn-sm btn-danger ml-2\"\r\n                >\r\n                  Supprimer\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      <button\r\n        disabled={ingredients.length < 1 ? true : false}\r\n        onClick={props.click}\r\n        className=\"btn btn-primary mt-3\"\r\n      >\r\n        Valider\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.ingredients,\r\n    ingredientsPrices: state.ingredientsPrices\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addIngredient: igd => dispatch(addIngredient(igd)),\r\n    supIngredient: igd => dispatch(supIngredient(igd))\r\n  };\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    padding: 20,\r\n    backgroundColor: \"#2E2E2E\",\r\n    color: \"white\"\r\n  }\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Board);\r\n","import * as actions_constants from \"./actions_constants\";\r\n\r\nexport const addIngredient = payload => {\r\n  return {\r\n    type: actions_constants.ADD_INGREDIENT,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const supIngredient = payload => {\r\n  return {\r\n    type: actions_constants.SUP_INGREDIENT,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const AddOrder = () => {\r\n  return {\r\n    type: actions_constants.ADD_ORDER\r\n  };\r\n};\r\n\r\nexport const saveUserInfos = payload => {\r\n  return {\r\n    type: actions_constants.SAVE_USER_INFOS,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const populateOrders = payload => {\r\n  return {\r\n    type: actions_constants.POPULATE_ORDERS,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const populateIngredients = payload => {\r\n  return {\r\n    type: actions_constants.POPULATE_INGREDIENTS,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const eraseBurger = () => {\r\n  return {\r\n    type: actions_constants.ERASE_BURGER\r\n  };\r\n};\r\n\r\nexport const deleteOrder = payload => {\r\n  return {\r\n    type: actions_constants.DELETE_ORDER,\r\n    payload\r\n  };\r\n};\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const SUP_INGREDIENT = \"SUP_INGREDIENT\";\r\nexport const ADD_ORDER = \"ADD_ORDER\";\r\nexport const SAVE_USER_INFOS = \"SAVE_USER_INFOS\";\r\nexport const POPULATE_ORDERS = \"POPULATE_ORDERS\";\r\nexport const POPULATE_INGREDIENTS = \"POPULATE_INGREDIENTS\";\r\nexport const ERASE_BURGER = \"ERASE_BURGER\";\r\nexport const DELETE_ORDER = \"DELETE_ORDER\";\r\n","import React from \"react\";\r\n\r\nconst Order = props => {\r\n  let burgerPrice = 0;\r\n  props.ingredients.map(igd => {\r\n    return (burgerPrice +=\r\n      props.ingredientsPrices[igd.ingredient] * igd.quantity);\r\n  });\r\n  return (\r\n    <div>\r\n      <p>Détail des ingredients :</p>\r\n      <ul className=\"list-group\">\r\n        {props.ingredients.map(igd => {\r\n          return (\r\n            <li key={igd.ingredient} className=\"list-group-item\">\r\n              {igd.ingredient} :\r\n              <span className=\"badge badge-pill badge-primary ml-1 mr-1\">\r\n                {igd.quantity}\r\n              </span>\r\n              pièces\r\n              <span className=\"badge badge-secondary ml-3\">\r\n                {props.ingredientsPrices[igd.ingredient] * igd.quantity} €\r\n              </span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <p style={{ marginTop: 10, marginBottom: 0 }}>\r\n        Prix du burger :\r\n        <span className=\"badge badge-secondary ml-3\">{burgerPrice} €</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Order from \"./Order\";\r\n\r\nconst ModalComponent = props => {\r\n  const ingredients = [];\r\n  for (let key in props.ingredients) {\r\n    ingredients.push({ ingredient: key, quantity: props.ingredients[key] });\r\n  }\r\n  return (\r\n    <Modal show={props.show} onHide={props.close}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Votre burger est fini ?</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Order\r\n          ingredients={ingredients}\r\n          ingredientsPrices={props.ingredientsPrices}\r\n        />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.close}>\r\n          Non, je rajoute des ingrédients\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={props.valid}>\r\n          Oui, aller au checkout\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.ingredients,\r\n    ingredientsPrices: state.ingredientsPrices\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ModalComponent);\r\n","import React, { Component } from \"react\";\r\nimport Burger from \"./Burger/Burger\";\r\nimport Board from \"./Board\";\r\nimport ModalComponent from \"../Components/ModalComponent\";\r\nimport { AddOrder } from \"./../Store/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = { show: false };\r\n  handleCloseModal = () => {\r\n    this.setState({ show: false });\r\n  };\r\n  handleShowModal = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  handleValid = () => {\r\n    this.handleCloseModal();\r\n    this.props.AddOrder();\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Burger />\r\n        <Board click={this.handleShowModal} />\r\n        <ModalComponent\r\n          show={this.state.show}\r\n          close={this.handleCloseModal}\r\n          valid={this.handleValid}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    AddOrder: () => dispatch(AddOrder())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(BurgerBuilder);\r\n","import React from \"react\";\r\nimport Order from \"../Components/Order\";\r\n\r\nconst OrderItem = ({\r\n  index,\r\n  order,\r\n  ingredientsPrices,\r\n  showDelete,\r\n  onDeleteOrder\r\n}) => {\r\n  return (\r\n    <li key={index} className=\"list-group-item list-group-item-dark\">\r\n      <div>\r\n        <p className=\"btn btn-primary mt-3\">\r\n          Burger\r\n          <span className=\"badge badge-light ml-3\">{index + 1}</span>\r\n        </p>\r\n        {showDelete && (\r\n          <button\r\n            onClick={() => onDeleteOrder(index)}\r\n            style={{ marginTop: 2 }}\r\n            className=\"btn btn-danger ml-2 mt-0\"\r\n          >\r\n            Supprimer\r\n          </button>\r\n        )}\r\n      </div>\r\n      <Order ingredients={order} ingredientsPrices={ingredientsPrices} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport OrderItem from \"../Components/OrderItem\";\r\nimport { toast } from \"react-toastify\";\r\nimport { eraseBurger, deleteOrder } from \"./../Store/actions\";\r\n\r\nclass Checkout extends Component {\r\n  handleOrder = async order => {\r\n    localStorage.removeItem(\"ingredients\");\r\n    localStorage.removeItem(\"orders\");\r\n    try {\r\n      const ordersOjb = {\r\n        user: this.props.userInfos.email,\r\n        orders: [...this.props.orders]\r\n      };\r\n      await axios.post(\r\n        \"https://burgerredux.firebaseio.com/orders.json\",\r\n        ordersOjb\r\n      );\r\n      toast.success(\r\n        <div>Simulation Paiement et validation de la commande</div>\r\n      );\r\n      setTimeout(() => {\r\n        window.location.replace(\r\n          \"https://christophe13012.github.io/burger_builder_redux\"\r\n        );\r\n      }, 4700);\r\n    } catch (error) {}\r\n  };\r\n  handleConnect = () => {\r\n    localStorage.setItem(\"ingredients\", JSON.stringify(this.props.ingredients));\r\n    localStorage.setItem(\"orders\", JSON.stringify(this.props.orders));\r\n    this.props.history.replace(\"/login\");\r\n  };\r\n  handleRedirect = () => {\r\n    localStorage.removeItem(\"ingredients\");\r\n    this.props.eraseBurger();\r\n    this.props.history.replace(\"/\");\r\n  };\r\n  handleDeleteOrder = index => {\r\n    this.props.deleteOrder(index);\r\n  };\r\n  render() {\r\n    let totalPrice = 0;\r\n    this.props.orders.map(order => {\r\n      return order.map(igd => {\r\n        return (totalPrice +=\r\n          this.props.ingredientsPrices[igd.ingredient] * igd.quantity);\r\n      });\r\n    });\r\n    const email = this.props.userInfos.email;\r\n    return (\r\n      <div style={{ textAlign: \"left\", padding: 30 }}>\r\n        {this.props.orders.length === 0 ? (\r\n          <React.Fragment>\r\n            <h1 className=\"display-4 mt-3 mb-4\" style={{ fontSize: 28 }}>\r\n              Aucun burger validé\r\n            </h1>\r\n            <NavLink to=\"/burger_builder\" className=\"btn btn-primary\">\r\n              Construire un burger\r\n            </NavLink>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <h1 className=\"display-4 mt-3 mb-4\" style={{ fontSize: 28 }}>\r\n              Voici le détail de votre commande :\r\n            </h1>\r\n            <ul className=\"list-group\">\r\n              {this.props.orders.map((order, index) => {\r\n                return (\r\n                  <OrderItem\r\n                    key={index}\r\n                    index={index}\r\n                    order={order}\r\n                    ingredientsPrices={this.props.ingredientsPrices}\r\n                    showDelete\r\n                    onDeleteOrder={this.handleDeleteOrder}\r\n                  />\r\n                );\r\n              })}\r\n            </ul>\r\n            <p style={{ marginTop: 10, marginBottom: 0 }}>\r\n              Montant de la commande :\r\n              <span className=\"badge badge-secondary ml-3\">{totalPrice} €</span>\r\n            </p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={this.handleRedirect}\r\n            >\r\n              Ajouter un autre burger\r\n            </button>\r\n            {email === undefined ? (\r\n              <button\r\n                className=\"btn btn-success mt-3 ml-3\"\r\n                onClick={this.handleConnect}\r\n              >\r\n                Se connecter pour commander\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-success mt-3 ml-3\"\r\n                onClick={this.handleOrder}\r\n              >\r\n                Valider et procéder au paiement\r\n              </button>\r\n            )}\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.orders,\r\n    ingredientsPrices: state.ingredientsPrices,\r\n    userInfos: state.userInfos,\r\n    ingredients: state.ingredients\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    eraseBurger: () => dispatch(eraseBurger()),\r\n    deleteOrder: payload => dispatch(deleteOrder(payload))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Checkout);\r\n","import React from \"react\";\r\n\r\nconst Input = ({ type, id, value, placeholder, onChange, error, label }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"email\">{label}</label>\r\n      <input\r\n        type={type}\r\n        className=\"form-control\"\r\n        id={id}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi\";\r\nimport axios from \"axios\";\r\nimport Input from \"../Components/Input\";\r\n\r\nconst schema = Joi.object().keys({\r\n  email: Joi.string()\r\n    .email({ minDomainAtoms: 2 })\r\n    .required(),\r\n  password: Joi.string()\r\n    .regex(/^[a-zA-Z0-9]{3,30}$/)\r\n    .required()\r\n});\r\n\r\nclass Login extends Component {\r\n  state = { loginInfos: { email: \"\", password: \"\" }, error: null };\r\n  handleChange = e => {\r\n    const loginInfos = { ...this.state.loginInfos };\r\n    loginInfos[e.target.type] = e.target.value;\r\n    this.setState({ loginInfos });\r\n  };\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const result = Joi.validate(this.state.loginInfos, schema);\r\n    if (result.error === null) {\r\n      try {\r\n        const response = await axios.post(\r\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBfWM4xAXaIT7wpWcpU_jPN0OiC4gWoE1w\",\r\n          this.state.loginInfos\r\n        );\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        window.location.replace(\r\n          \"https://christophe13012.github.io/burger_builder_redux\"\r\n        );\r\n\r\n        this.setState({ error: null });\r\n      } catch (error) {\r\n        this.setState({ error: \"Email ou mot de passe incorrect\" });\r\n      }\r\n    } else {\r\n      this.traduireMessage(result.error.details[0].message);\r\n    }\r\n  };\r\n  traduireMessage = message => {\r\n    let error;\r\n    const arr = message.split(\" \");\r\n    if (arr.indexOf(\"empty\") !== -1)\r\n      error = \"Aucun des champs ne doit etre vide\";\r\n    if (arr.indexOf(\"email\") !== -1) error = \"Votre email n'est pas valide\";\r\n    if (arr.indexOf(\"pattern:\") !== -1)\r\n      error = \"Votre mot de passe n'est pas assez long\";\r\n    this.setState({ error });\r\n  };\r\n  render() {\r\n    console.log(this.props.history);\r\n\r\n    return (\r\n      <div style={{ textAlign: \"left\", padding: 30 }}>\r\n        <h1 className=\"display-4 mt-3 mb-4\" style={{ fontSize: 28 }}>\r\n          Veuillez entrer vos informations :\r\n        </h1>\r\n        <form className=\"col-6\">\r\n          <Input\r\n            placeholder=\"Entrer email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            error={null}\r\n            label=\"Adresse email\"\r\n          />\r\n          <Input\r\n            placeholder=\"Entrez votre mot de passe\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            error={null}\r\n            label=\"Mot de passe\"\r\n          />\r\n          {this.state.error && (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              {this.state.error}\r\n            </div>\r\n          )}\r\n          <button\r\n            onClick={this.handleSubmit}\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Se connecter\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi\";\r\nimport Input from \"../Components/Input\";\r\nimport axios from \"axios\";\r\n\r\nconst schema = {\r\n  email: Joi.string()\r\n    .email({ minDomainAtoms: 2 })\r\n    .required(),\r\n  password: Joi.string()\r\n    .regex(/^[a-zA-Z0-9]{6,30}$/)\r\n    .required(),\r\n  verifPassword: Joi.string()\r\n    .regex(/^[a-zA-Z0-9]{6,30}$/)\r\n    .required()\r\n};\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    loginInfos: { email: \"\", password: \"\", verifPassword: \"\" },\r\n    errors: { email: null, password: null, verifPassword: null },\r\n    error: null\r\n  };\r\n  handleChange = e => {\r\n    const loginInfos = { ...this.state.loginInfos };\r\n    const errors = { ...this.state.errors };\r\n    loginInfos[e.target.id] = e.target.value;\r\n    const result = Joi.validate(e.target.value, schema[e.target.id]);\r\n    if (result.error !== null) {\r\n      const error = this.traduireMessage(result.error.details[0].message);\r\n      errors[e.target.id] = error;\r\n    } else {\r\n      errors[e.target.id] = null;\r\n    }\r\n    this.setState({ loginInfos, errors });\r\n  };\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if (\r\n      this.state.loginInfos.password === this.state.loginInfos.verifPassword\r\n    ) {\r\n      const authData = {\r\n        email: this.state.loginInfos.email,\r\n        password: this.state.loginInfos.password,\r\n        returnSecureToken: true\r\n      };\r\n      try {\r\n        const response = await axios.post(\r\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBfWM4xAXaIT7wpWcpU_jPN0OiC4gWoE1w\",\r\n          authData\r\n        );\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        window.location.replace(\r\n          \"https://christophe13012.github.io/burger_builder_redux\"\r\n        );\r\n      } catch (error) {\r\n        this.setState({ error: \"Email déjà utilisé\" });\r\n      }\r\n    } else {\r\n      this.setState({ error: \"Les mots de passe ne sont pas identiques\" });\r\n    }\r\n  };\r\n  traduireMessage = message => {\r\n    let error;\r\n    const arr = message.split(\" \");\r\n    if (arr.indexOf(\"empty\") !== -1) error = \"Le champs ne doit etre vide\";\r\n    if (arr.indexOf(\"email\") !== -1) error = \"Votre email n'est pas valide\";\r\n    if (arr.indexOf(\"pattern:\") !== -1)\r\n      error = \"Votre mot de passe doit être de 6 à 30 caractères\";\r\n    return error;\r\n  };\r\n  render() {\r\n    let disabled = false;\r\n    for (let key in this.state.errors) {\r\n      if (this.state.errors[key] !== null || this.state.loginInfos[key] === \"\")\r\n        disabled = true;\r\n    }\r\n    return (\r\n      <div style={{ textAlign: \"left\", padding: 30 }}>\r\n        <h1 className=\"display-4 mt-3 mb-4\" style={{ fontSize: 28 }}>\r\n          Veuillez entrer vos informations :\r\n        </h1>\r\n        <form className=\"col-6\">\r\n          <Input\r\n            placeholder=\"Entrer email valide\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            error={this.state.errors.email}\r\n            label=\"Email\"\r\n          />\r\n          <Input\r\n            placeholder=\"Mot de passe de 6 à 30 caractères\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            error={this.state.errors.password}\r\n            label=\"Mot de passe\"\r\n          />\r\n          <Input\r\n            placeholder=\"Mot de passe de 6 à 30 caractères\"\r\n            type=\"password\"\r\n            id=\"verifPassword\"\r\n            value={this.state.verifPassword}\r\n            onChange={this.handleChange}\r\n            error={this.state.errors.verifPassword}\r\n            label=\"Confirmation mot de passe\"\r\n          />\r\n          {this.state.error && (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              {this.state.error}\r\n            </div>\r\n          )}\r\n          <button\r\n            disabled={disabled}\r\n            onClick={this.handleSubmit}\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n          >\r\n            S'inscrire\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport OrderItem from \"../Components/OrderItem\";\r\n\r\nclass Account extends Component {\r\n  state = { data: {} };\r\n  async componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token === null) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://burgerredux.firebaseio.com/orders.json\"\r\n      );\r\n      this.setState({ data: response.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    const email = this.props.userInfos.email;\r\n    const arrOrders = [];\r\n    for (let key in this.state.data) {\r\n      if (this.props.userInfos.email === this.state.data[key].user) {\r\n        arrOrders.push(this.state.data[key].orders);\r\n      }\r\n    }\r\n    return (\r\n      <div style={{ textAlign: \"left\", padding: 30 }}>\r\n        <h1 className=\"display-4 mt-3 mb-4\" style={{ fontSize: 28 }}>\r\n          Voici les infos de votre compte :\r\n        </h1>\r\n        <p>Adresse mail : {email}</p>\r\n        <p>Récapitulatif des commandes :</p>\r\n        <ul>\r\n          {arrOrders.map((orders, index) => {\r\n            return (\r\n              <li key={index} className=\"list-group-item\">\r\n                <p className=\"btn btn-primary\">\r\n                  Commande numéro\r\n                  <span className=\"badge badge-light ml-2\">{index + 1}</span>\r\n                  <span className=\"sr-only\">unread messages</span>\r\n                </p>\r\n                <ul>\r\n                  {orders.map((order, index) => {\r\n                    return (\r\n                      <OrderItem\r\n                        key={index}\r\n                        index={index}\r\n                        order={order}\r\n                        ingredientsPrices={this.props.ingredientsPrices}\r\n                      />\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userInfos: state.userInfos,\r\n    ingredientsPrices: state.ingredientsPrices\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Account);\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst Deconnection = () => {\r\n  useEffect(() => {\r\n    localStorage.clear();\r\n    setTimeout(() => {\r\n      window.location.replace(\r\n        \"https://christophe13012.github.io/burger_builder_redux\"\r\n      );\r\n    }, 1500);\r\n  });\r\n  return (\r\n    <h1 className=\"display-4 mt-3 mb-4\" style={{ fontSize: 28 }}>\r\n      Deconnection en cours ...\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default Deconnection;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./Components/Navigation\";\nimport BurgerBuilder from \"./Containers/BurgerBuilder\";\nimport { Route, Switch, Redirect } from \"react-router\";\nimport Checkout from \"./Containers/Checkout\";\nimport Login from \"./Containers/Login\";\nimport Register from \"./Containers/Register\";\nimport Account from \"./Containers/Account\";\nimport Deconnection from \"./Containers/Deconnection\";\nimport {\n  saveUserInfos,\n  populateOrders,\n  populateIngredients\n} from \"./Store/actions\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nclass App extends React.Component {\n  state = {};\n  async componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    const objToken = { idToken: token };\n    if (token !== null) {\n      try {\n        const response = await axios.post(\n          \"https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyBfWM4xAXaIT7wpWcpU_jPN0OiC4gWoE1w\",\n          objToken\n        );\n        this.props.saveUserInfos(response.data.users[0]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (localStorage.ingredients !== undefined) {\n      console.log(\"test\");\n\n      this.props.populateIngredients(JSON.parse(localStorage.ingredients));\n    }\n    if (localStorage.orders !== undefined) {\n      this.props.populateOrders(JSON.parse(localStorage.orders));\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <ToastContainer position=\"top-center\" />\n        <Switch>\n          <Route path=\"/burger_builder\" component={BurgerBuilder} />\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/compte\" component={Account} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/deconnection\" component={Deconnection} />\n          <Redirect exact from=\"/\" to=\"/burger_builder\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveUserInfos: userInfos => dispatch(saveUserInfos(userInfos)),\n    populateOrders: orders => dispatch(populateOrders(orders)),\n    populateIngredients: ingredients =>\n      dispatch(populateIngredients(ingredients))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actions_constants from \"./actions_constants\";\r\n\r\nconst initialState = {\r\n  ingredients: {\r\n    Salade: 0,\r\n    Bacon: 0,\r\n    Viande: 0,\r\n    Fromage: 0\r\n  },\r\n  ingredientsPrices: {\r\n    Salade: 1,\r\n    Bacon: 2,\r\n    Viande: 3,\r\n    Fromage: 1.5\r\n  },\r\n  orders: [],\r\n  userInfos: []\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  let ingredients = { ...state.ingredients };\r\n  let orders = [...state.orders];\r\n  switch (action.type) {\r\n    case actions_constants.POPULATE_ORDERS:\r\n      orders = action.payload;\r\n      return {\r\n        ...state,\r\n        orders\r\n      };\r\n    case actions_constants.POPULATE_INGREDIENTS:\r\n      ingredients = action.payload;\r\n      return {\r\n        ...state,\r\n        ingredients\r\n      };\r\n    case actions_constants.ERASE_BURGER:\r\n      ingredients = {\r\n        Salade: 0,\r\n        Bacon: 0,\r\n        Viande: 0,\r\n        Fromage: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        ingredients\r\n      };\r\n    case actions_constants.ADD_INGREDIENT:\r\n      ingredients[action.payload] = ingredients[action.payload] + 1;\r\n      return {\r\n        ...state,\r\n        ingredients\r\n      };\r\n    case actions_constants.SUP_INGREDIENT:\r\n      ingredients[action.payload] = ingredients[action.payload] - 1;\r\n      return {\r\n        ...state,\r\n        ingredients\r\n      };\r\n    case actions_constants.ADD_ORDER:\r\n      const order = [];\r\n      for (let key in ingredients) {\r\n        order.push({ ingredient: key, quantity: ingredients[key] });\r\n      }\r\n      orders.push(order);\r\n      return {\r\n        ...state,\r\n        orders\r\n      };\r\n    case actions_constants.DELETE_ORDER:\r\n      orders.splice(action.payload, 1);\r\n      return {\r\n        ...state,\r\n        orders\r\n      };\r\n    case actions_constants.SAVE_USER_INFOS:\r\n      return {\r\n        ...state,\r\n        userInfos: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createStore } from \"redux\";\nimport { rootReducer } from \"./Store/reducers\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}